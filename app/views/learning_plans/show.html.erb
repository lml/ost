<%# Copyright 2011-2012 Rice University. Licensed under the Affero General Public 
    License version 3 or later.  See the COPYRIGHT file for details. %>

<% addTestMeta {{:page_type  => "show"}} %>
<% addTestMeta {{:major_name => @learning_plan.klass.course.name}} %>
<% addTestMeta {{:minor_name => "Learning Plan"}} %>

<%= pageHeading "Learning Plan: #{@learning_plan.name}"%>

<% enable_best_in_place %>

<% if !@learning_plan.description.blank? %>
  <%= @learning_plan.description %>
<% end %>

<div id="lp_items">

<%= section "Topics", {:help_topic => 'topic', :classes => 'first no_bar'} do %>

  <div id="topics" class="test test_section topics">
    <% @learning_plan.topics.each do |topic| %>
      <%= render :partial => 'topics/show', :locals => {:topic => topic} %>
    <% end %>
  </div>
  
  <br/>
  <%= link_to "Add new topic ...", 
              learning_plan_topics_path(@learning_plan), 
              :method => :post,
              :remote => true %>
<% end %>

<%= section "Assignments" do %>

  <div id="assignment_plans" class="test test_section assignments">
    <% @learning_plan.assignment_plans.each do |assignment_plan| %>
      <%= render :partial => 'assignment_plans/show', :locals => {:assignment_plan => assignment_plan} %>
    <% end %>
  </div>
  

  <br/>
  <%= link_to "Add new assignment ...", 
              new_learning_plan_assignment_plan_path(@learning_plan), 
              :remote => true %> |
  <%= link_to "Preview assignments",
              preview_assignments_klass_path(@learning_plan.klass) %>
<% end %>

<%= section "Global Labels" do %>

  <table width="90%" class="left_heading">
    <tr>
      <td width="45%" style="text-align:left">Labels to apply to all tests:</td>
      <td><%= @learning_plan.test_exercise_tags %></td>
    </tr>
    <tr>
      <td width="45%" style="text-align:left">Labels to apply to all non-tests:</td>
      <td><%= @learning_plan.nontest_exercise_tags %></td>
    </tr>
  </table>

  <br/>
  <%= link_to "Edit...", 
              edit_learning_plan_path(@learning_plan),
              :remote => true %>

<% end %>

<%= section "Scheduling" do %>

  <div id="calendar"></div>

  <% content_for :javascript do %>
    <%= javascript_tag do %>

 	function pad_leading_zeros (num, size) {
		var s = num + "";
		while (s.length < size)
		  s = "0" + s;
		return s;
	}

	function format_event_date(calDate) {
		s = pad_leading_zeros(calDate.getFullYear(), 4)  + "-" +
		    pad_leading_zeros(calDate.getMonth()+1, 2)   + "-" +
		    pad_leading_zeros(calDate.getDate(), 2)      + " " +
			pad_leading_zeros(calDate.getHours(), 2)     + ":" +
			pad_leading_zeros(calDate.getMinutes(), 2)   + ":" +
			pad_leading_zeros(calDate.getSeconds(), 2);
		return s;
	}
  
	function handle_event_update(calEvent, revertFunc) {
		 $.ajax({
		   type: "POST",
		   url: '/assignment_plans/' + calEvent.ost_id,
		   data: { 
		           _method:'PUT', 
		           assignment_plan : { 
		               starts_at: format_event_date(calEvent.start), 
		               ends_at:   format_event_date(calEvent.end) 
		           } 
		   },
		   dataType: 'json',
		   success: function(msg) {},
		   error: function(jqXHR, textStatus, errorThrown) {
		     open_message_dialog(true, 150, 440, 'Error!', jQuery.parseJSON(jqXHR.responseText).join("<br/><br/>"));
		     revertFunc();
		   }
		 });
	}
  
	$(document).ready(function() {
	  $('#calendar').fullCalendar({
	      timeFormat:  'h(:mm)t { - h(:mm)t}  ',
	      eventColor: get_os_color('blue'),
	      header: {
	        left: 'title',
	        center: 'agendaWeek,month',
	        right: 'today prev,next'
	      },
	      events: [
	        <% events = @learning_plan.assignment_plans.each_with_index do |assignment_plan, ii| %>
	          <%= (render :partial => 'assignment_plans/assignment_plan_event', 
	                     :locals => {:assignment_plan => assignment_plan}).html_safe %>
	          <%= ','.html_safe if ii != @learning_plan.assignment_plans.count - 1%>
	        <% end %>
	      ],
	      eventClick: function(calEvent, jsEvent, view) {
	        $.ajax({type: "GET", url: "/assignment_plans/" + calEvent.ost_id + "/edit"});
	      },
	      eventResize: function(calEvent, dayDelta, minuteDelta, revertFunc, jsEvent, ui, view ) { 
	        handle_event_update(calEvent, revertFunc);
	      },
	      eventDrop: function(calEvent,dayDelta,minuteDelta,allDay,revertFunc) {
	        handle_event_update(calEvent, revertFunc);
	      }
	  });        
	});
         
    <% end %>
  <% end %>

<% end %>

</div>

<%
  navitem { link_to "#{t(@learning_plan.klass.class)}", @learning_plan.klass }
  navitem { link_to "Concepts", learning_plan_concepts_path(@learning_plan) }
  navitem { 
      x = link_to "Refresh Exercises", learning_plan_refresh_exercises_path(@learning_plan), :method => :put, :remote => true 
      x << " " << (link_to_help 'refresh_exercises', "", {:width => 700})
  }
%>


